worker_processes auto;

# to get access to additional modules from "nginx-extra" package
include /etc/nginx/modules-enabled/*.conf;


events {
  worker_connections 1024;
}

http {
  include /etc/nginx/conf.d/*.conf;

  upstream flask_app {
    server flask_webapp:8080;
  }

  gzip            on;
  gzip_min_length 1000;
  gzip_proxied    expired no-cache no-store private auth;
  gzip_types      text/plain text/css text/xml
                  application/javascript application/json application/xml application/rss+xml image/svg+xml;

  # neccessary for many server{}-blocks
  server_names_hash_bucket_size 64;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  more_clear_headers 'server';

  # Common TLS Config
  ssl_certificate     /etc/letsencrypt/live/blackandwhitedata.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/blackandwhitedata.com/privkey.pem;
  ssl_dhparam         /etc/ssl/certs/dhparam.pem;
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_ciphers         "EECDH-AESGCM:EDH+ESGCM:AES256+EECDH:AES256+EDH";
  ssl_prefer_server_ciphers on;
  add_header          Strict-Transport-Security "max-age=31557600; includeSubdomains" always;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;

  }

  server {
      server_name blackandwhitedata.com;
      
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
  
      location / {

        include uwsgi_params;
        uwsgi_pass flask_app;

        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # container needs to know it doesn't run on "http://some-service-running-inside-docker" 

        uwsgi_param   HTTP_X-Forwarded-Host       blackandwhitedata.com;
        uwsgi_param   X-Forwarded-Proto       https;
        uwsgi_param   X-Forwarded-For       $remote_addr;
        uwsgi_param   X-Forwarded-IP       $remote_addr;
        


      }
    }
}


